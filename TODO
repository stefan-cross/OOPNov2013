Current state:

17/12/2013
There was something amiss with the list and node linkage, on debugging front->has no previous els, but has next els
this suggests that there is a incorrect allocation in the List class, seems although it was previously working it was
referencing next and prev incorrectly, this is now rectified and now that i understand the Data Structure tests are
being put in place.
//TODO best way to test generics and exceptions?

16/12/2013
Added in RankingList modeled on a PriorityQue ADT, and a rough sanity implementation in the app
//TODO need an iterator capable of handling key-value pair

Added multiple inheritance to interfaces to allow access to artists and title names via track class as this was going to
cause issue with previous implementation as you couldn't access the necessary data to compare on
//TODO refactor Artist and Track classes as necessary

Major refactoring to more accurate names of classes and packages as previously referred to everything as a Ranking which
wasn't accurate of class behaviour when in fact everything was a list or a stack.

Work beings on a comparator and a sorted list

15/12/2013
We now have a double linked list implementation that servers the purpose of adding objects to the list and they can be
retrieved by means of an iterator.

14/12/2013
Made some progress on introducing generics however unsure of actual progress as failing to compile now :(


Now have a cmdln interface to add tracks to a lib and return the lib stack

TODO 1 - convert stack to list/set currently pop removes the elements,
TODO 2 - we need a getNext/iterator to access elements not removing them
TODO 3 - we need a comparator to prevent adding the same track artist and title
TODO 4 - need to then access a track and inc plays and downloads so we have something to arrange the library by
TODO 5 - Explore the idea of having a library list, and artist lists of tracks...

...The idea of having a Library that contains all the tracks and the rankinglist iterates through the lib
to create listing by downloads or plays...



Write out specs and uml
write tests
write iterator and generator to produce data


1 - Highlevel Skeleton separation of concerns
2 - Specification, OVERVIEW, MODIFIES, EFFECTS
3 - Formal Methods, Abstract Function & Rep Invariant
3 - Centralised
4 - Decentralised
5 - Dealing with nulls and Exceptions
6 - Mutation
